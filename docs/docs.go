// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/book/{id}": {
            "get": {
                "description": "Get Event by given ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Events"
                ],
                "summary": "get event by given ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Book ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ezyevent-api_internal_model.Event"
                        }
                    }
                }
            }
        },
        "/v1/events": {
            "get": {
                "description": "Get List of all events.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Events"
                ],
                "summary": "get all exists books",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/ezyevent-api_internal_model.Event"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "ezyevent-api_internal_model.Category": {
            "type": "object",
            "properties": {
                "iconUrl": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "ezyevent-api_internal_model.Event": {
            "type": "object",
            "properties": {
                "banner": {
                    "type": "string"
                },
                "category": {
                    "$ref": "#/definitions/ezyevent-api_internal_model.Category"
                },
                "categoryID": {
                    "type": "string"
                },
                "date": {
                    "type": "integer"
                },
                "details": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "lat": {
                    "type": "number"
                },
                "lng": {
                    "type": "number"
                },
                "locationName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "orgId": {
                    "type": "string"
                },
                "organization": {
                    "$ref": "#/definitions/ezyevent-api_internal_model.Organization"
                },
                "price": {
                    "type": "number"
                },
                "summary": {
                    "type": "string"
                }
            }
        },
        "ezyevent-api_internal_model.Organization": {
            "type": "object",
            "properties": {
                "bannerUrl": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "orgImageUrl": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/ezyevent-api_internal_model.User"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "ezyevent-api_internal_model.User": {
            "type": "object",
            "properties": {
                "dob": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "profile_url": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
